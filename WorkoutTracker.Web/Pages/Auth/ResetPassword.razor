@page "/reset-password"
@using WorkoutTracker.Shared.Models.Auth
@using WorkoutTracker.Shared.Models.Auth.Password
@using WorkoutTracker.Web.Components
@using WorkoutTracker.Web.ViewModels.AuthViewModel
@using Microsoft.AspNetCore.WebUtilities

<PageTitle>WorkoutTracker - Reset Password</PageTitle>

<MessageComponent IsBusy="AuthViewModel.IsBusy" Errors="AuthViewModel.Errors" SuccessMessages="AuthViewModel.SuccessMessages"/>

<div class="center box">
    <h2>Reset Password</h2>

    <EditForm Model="request" OnValidSubmit="ResetPasswordRequest">
        <DataAnnotationsValidator />

        <p>
            <ValidationSummary />
        </p>

        <p>
            <label for="password">Password</label>
            <input type="password" @bind="request.Password" id="password" class="w-100" />
        </p>

        <p>
            <label for="confirmPassword">Confirm Password</label>
            <input type="password" @bind="request.ConfirmPassword" id="confirmPassword" class="w-100" />
        </p>

        <button class="w-100 button-primary" type="submit">Set Password</button>
    </EditForm>
</div>

@code {
    [Inject] 
    IAuthViewModel AuthViewModel { get; set; }

    [Inject] 
    NavigationManager NavigationManager { get; set; }

    private ResetPasswordRequestDto request = new ResetPasswordRequestDto();

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("userId", out var userId))
        {
            request.UserId = userId;
        }
        else 
        {
            NavigationManager.NavigateTo("login");
        }

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token))
        {
            request.Token = token;
        }
        else
        {
            NavigationManager.NavigateTo("login");
        }
    }

    private async Task ResetPasswordRequest()
    {
        if (await AuthViewModel.ResetPassword(request))
        {
            AuthViewModel.AddSuccessMessage("Password reset successfully. Navigating to login...");
            await Task.Delay(2000);
            NavigationManager.NavigateTo("login");
        }
    }
}