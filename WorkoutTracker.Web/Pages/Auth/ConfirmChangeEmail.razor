@page "/change-email"
@using WorkoutTracker.Shared.Dto.Auth.Email
@using WorkoutTracker.Web.Components
@using WorkoutTracker.Web.ViewModels.AuthViewModel
@using Microsoft.AspNetCore.WebUtilities

<PageTitle>WorkoutTracker - Confirm Email</PageTitle>

<MessageComponent IsBusy="AuthViewModel.IsBusy" Errors="AuthViewModel.Errors" SuccessMessages="AuthViewModel.SuccessMessages"/>

<div class="center box">
    <h2>Verify New Email</h2>

    @if (success == null)
    {
        <p>
            Confirming your new email...
        </p>
    }
    else
    {
        @if (success == true)
        {
            <p>
                Email verified successfully!
                <AuthorizeView>
                    <Authorized>
                        <a href="login">Home</a>
                    </Authorized>
                    <NotAuthorized>
                        <a href="login">Login</a>
                    </NotAuthorized>
                </AuthorizeView>
            </p>
        }
        else
        {
            <p>
                Email verification failed. Please try again.
            </p>
        }
    }
</div>


@code {
    [Inject] 
    IAuthViewModel AuthViewModel { get; set; }

    [Inject] 
    NavigationManager NavigationManager { get; set; }

    private ConfirmChangeEmailRequestDto request = new ConfirmChangeEmailRequestDto();
    private bool? success = null;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("userId", out var userId))
        {
            request.UserId = userId;
        }
        else 
        {
            success = false;
        }

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token))
        {
            request.Token = token;
        }
        else
        {
            success = false;
        }

        if(success == null) 
        {
            success = await AuthViewModel.ConfirmChangeEmail(request);
        }
    }
}